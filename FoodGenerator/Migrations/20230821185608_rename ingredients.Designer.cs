// <auto-generated />
using FoodGenerator.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodGenerator.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230821185608_rename ingredients")]
    partial class renameingredients
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodGenerator.Database.Models.Food", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("DaysCount")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("FoodGenerator.Database.Models.FoodIngredient", b =>
                {
                    b.Property<string>("FoodsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IngredientdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FoodId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IngredientId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FoodsId", "IngredientdId");

                    b.HasIndex("FoodId");

                    b.HasIndex("IngredientId");

                    b.ToTable("FoodIngredients");
                });

            modelBuilder.Entity("FoodGenerator.Database.Models.Ingredient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("FoodGenerator.Database.Models.FoodIngredient", b =>
                {
                    b.HasOne("FoodGenerator.Database.Models.Food", "Food")
                        .WithMany("FoodIngredients")
                        .HasForeignKey("FoodId");

                    b.HasOne("FoodGenerator.Database.Models.Ingredient", "Ingredient")
                        .WithMany("FoodIngredients")
                        .HasForeignKey("IngredientId");

                    b.Navigation("Food");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("FoodGenerator.Database.Models.Food", b =>
                {
                    b.Navigation("FoodIngredients");
                });

            modelBuilder.Entity("FoodGenerator.Database.Models.Ingredient", b =>
                {
                    b.Navigation("FoodIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
